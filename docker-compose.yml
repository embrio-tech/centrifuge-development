volumes:
  db:
  dbadmin-data:

services:
  subql-installer:
    image: node:16-alpine
    profiles: ['backend']
    volumes:
      - ./centrifuge-subql:/app
    working_dir: /app
    command:
      - sh
      - -c
      - yarn codegen && yarn build
  
  subql-db:
    build:
      context: ./centrifuge-subql/
      dockerfile: docker/pg-Dockerfile
    profiles: ['backend']
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  subql-db-admin:
    image: dpage/pgadmin4
    profiles: ['disabled']
    depends_on:
      subql-db:
        condition: service_healthy
    environment:
      - PGADMIN_DISABLE_POSTFIX=true
      - PGADMIN_DEFAULT_EMAIL=admin@e.mail
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - 8011:80
    volumes:
      - dbadmin-data:/var/lib/pgadmin

  subql-node:
    image: onfinality/subql-node:v1.10.2
    profiles: ['backend']
    depends_on:
      subql-db:
        condition: service_healthy
      subql-installer:
        condition: service_completed_successfully
    restart: always
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    volumes:
      - ./centrifuge-subql:/app
    command:
      - -f=/app
      - --db-schema=app
      #- --batch-size=1000
      - --disable-historical=true
      #- --debug
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subql-node:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subql-query:
    image: onfinality/subql-query:v1.6.0
    profiles: ['backend']
    ports:
      - 3000:3000
    depends_on:
      subql-db:
        condition: service_healthy
      subql-node:
        condition: service_healthy
      subql-installer:
        condition: service_completed_successfully
    restart: always
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    command:
      - --name=app
      - --playground
      - --indexer=http://subql-node:3000

  insights-client:
    image: centrifuge-insights
    profiles: ['frontend']
    build:
      context: centrifuge-insights
      dockerfile: Dockerfile
      target: install
    volumes:
      - ./centrifuge-insights:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 8010:8010
    environment:
      # make hot-reloading work.
      - CHOKIDAR_USEPOLLING=true # maybe obsolete?
      - WDS_SOCKET_PORT=0
      # run node in development mode
      - NODE_ENV=development
      # set ops env to local
      - REACT_APP_OPS_ENV=local
      - PORT=8010
    command: yarn start