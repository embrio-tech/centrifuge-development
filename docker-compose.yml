volumes:
  subqlDb:
  subqlDbAdmin:
  blenderDb:


services:
  subql-installer:
    image: node:16-alpine
    profiles:
      - subql
    volumes:
      - ./centrifuge-subql:/app
    working_dir: /app
    command:
      - sh
      - -c
      - yarn codegen && yarn build
  
  subql-proj:
    image: mikefarah/yq
    profiles:
      - subql
    volumes:
      - ./centrifuge-subql:/app
    working_dir: /app
    entrypoint: []
    command: 
      - sh
      - -c
      - 'yq ". *= load(\"chains/development-embrio.yaml\")" chains/base.yaml > project.yaml'

  subql-db:
    build:
      context: ./centrifuge-subql/
      dockerfile: docker/pg-Dockerfile
    profiles:
      - subql
    ports:
      - 5432:5432
    volumes:
      - subqlDb:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: subql
      POSTGRES_USER: ${SUBQL_DB_USER}
      POSTGRES_PASSWORD: ${SUBQL_DB_PASS}
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 5s
      timeout: 5s
      retries: 5

  subql-db-admin:
    image: dpage/pgadmin4
    profiles: [ 'disabled' ]
    depends_on:
      subql-db:
        condition: service_healthy
    environment:
      - PGADMIN_DISABLE_POSTFIX=true
      - PGADMIN_DEFAULT_EMAIL=admin@e.mail
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - 8011:80
    volumes:
      - subqlDbAdmin:/var/lib/pgadmin

  subql-node:
    image: onfinality/subql-node
    profiles:
      - subql
    depends_on:
      subql-db:
        condition: service_healthy
      subql-installer:
        condition: service_completed_successfully
      subql-proj:
        condition: service_completed_successfully
    restart: always
    environment:
      DB_USER: ${SUBQL_DB_USER}
      DB_PASS: ${SUBQL_DB_PASS}
      DB_DATABASE: subql
      DB_HOST: subql-db
      DB_PORT: 5432
    volumes:
      - ./centrifuge-subql:/app
    command:
      - -f=/app
      - --db-schema=app
      #- --batch-size=1000
      - --disable-historical=true
      #- --debug
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://subql-node:3000/ready' ]
      interval: 3s
      timeout: 5s
      retries: 10

  subql-query:
    image: onfinality/subql-query
    profiles:
      - subql
    ports:
      - 3000:3000
    depends_on:
      subql-db:
        condition: service_healthy
      subql-node:
        condition: service_healthy
      subql-installer:
        condition: service_completed_successfully
      subql-proj:
        condition: service_completed_successfully
    restart: always
    environment:
      DB_USER: ${SUBQL_DB_USER}
      DB_PASS: ${SUBQL_DB_PASS}
      DB_DATABASE: subql
      DB_HOST: subql-db
      DB_PORT: 5432
    command:
      - --name=app
      - --playground
      - --indexer=http://subql-node:3000

  insights-client:
    image: centrifuge-insights
    profiles:
      - insights
    build:
      context: centrifuge-insights
      dockerfile: Dockerfile
      target: install
    volumes:
      - ./centrifuge-insights:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 8010:8010
    environment:
      # make hot-reloading work.
      - CHOKIDAR_USEPOLLING=true # maybe obsolete?
      - WDS_SOCKET_PORT=0
      # run node in development mode
      - NODE_ENV=development
      # set ops env to local
      - REACT_APP_OPS_ENV=local
      - PORT=8010
    command: yarn start

  blender-db:
    image: mongo
    profiles:
      - blender
    volumes:
      - blenderDb:/data/db
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${BLENDER_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${BLENDER_DB_PASS}
      MONGO_INITDB_DATABASE: blender
